version: "3.8"
services:
  mongonex:
    image: mongo
    container_name: hardhome-mongo-prod
    restart: always
    networks:
      - hardhome-network-prod
    volumes:
      - "./mongodata:/data/db"  
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    container_name: hardhome-mongo-express-prod
    restart: always
    ports:
      - 8081:8081
    networks:
      - hardhome-network-prod
    depends_on:
      - mongonex  
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongonex:27017/

  backend-service:
    environment:
      PORT: ${BACKEND_SERVER_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      MONGO_HOST: mongonex
      MONGO_PORT: 27017
      MONGO_DB: ${MONGO_DB}
    image: 121487958432.dkr.ecr.us-east-1.amazonaws.com/hardhome-backend-service-image-prod:latest
    container_name: hardhome-backend-service-prod
    restart: on-failure
    # ports:
    #   - 3010:3010
    networks:
      - hardhome-network-prod
    depends_on:
      - mongonex

  api-service:
    environment:
      PORT: ${API_SERVER_PORT}
      BACKEND_SERVER_HOST: backend-service
      BACKEND_SERVER_PORT: ${BACKEND_SERVER_PORT}
    image: 121487958432.dkr.ecr.us-east-1.amazonaws.com/hardhome-api-service-image-prod:latest
    container_name: hardhome-api-service-prod
    restart: on-failure
    ports:
      - 3020:3020
    networks:
      - hardhome-network-prod
    command: npm start  

  frontend-service:
    image: 121487958432.dkr.ecr.us-east-1.amazonaws.com/hardhome-frontend-service-image-prod:latest
    container_name: hardhome-frontend-service-prod
    volumes:
      - "./envfile:/usr/share/nginx/html/env/envfile"
    ports:
      - "12000:80"
    restart: on-failure    

networks:
  hardhome-network-prod:
    name: hardhome-docker-network-prod
    driver: bridge